Index: src/makeguids.h
--- src/makeguids.h.orig
+++ src/makeguids.h
@@ -36,7 +36,7 @@ struct guidname_index {
 };
 
 static int
-gnopguidcmp(const void *p1, const void *p2, void *ctxp UNUSED)
+gnopguidcmp(const void *p1, const void *p2)
 {
 	struct guidname_offset *gno1 = (struct guidname_offset *)p1;
 	struct guidname_offset *gno2 = (struct guidname_offset *)p2;
@@ -58,7 +58,7 @@ read_guids_at(const int dirfd, const char * const path
 
 	if ((dirfd < 0 && !(dirfd & AT_FDCWD))
 	    || path == NULL
-	    || (path[0] == '\0' && !(dirfd & AT_EMPTY_PATH))
+	    //|| (path[0] == '\0' && !(dirfd & AT_EMPTY_PATH))
 	    || guidnamesp == NULL) {
 		errno = EINVAL;
 		return -1;
@@ -188,13 +188,17 @@ read_guids_at(const int dirfd, const char * const path
 		strncpy(guidstr, &buf[bpos], 37);
 		guidstr[36] = '\0';
 
-		char *desc = strchrnul(symbol, '\t');
+		char *desc = strchr(symbol, '\t');
+		if (desc == NULL)
+			desc = symbol + strlen(symbol);
 		if (*desc != '\0') {
 			*desc = '\0';
 			desc += 1;
 		}
 
-		char *end = strchrnul(desc, '\n');
+		char *end = strchr(desc, '\n');
+		if (end == NULL)
+			end = desc + strlen(desc);
 		*end = '\0';
 
 		efi_guid_t guid;
@@ -257,8 +261,8 @@ read_guids_at(const int dirfd, const char * const path
 	guidnames->nguids = nguids;
 	guidnames->strsz = spos;
 
-	qsort_r(&guidnames->offsets[0], nguids,
-		sizeof(struct guidname_offset), gnopguidcmp, guidnames);
+	qsort(&guidnames->offsets[0], nguids,
+		sizeof(struct guidname_offset), gnopguidcmp);
 
 	*guidnamesp = guidnames;
 
